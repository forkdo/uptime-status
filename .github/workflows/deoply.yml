name: Deploy

on:
  push:
    branches:
      - main
      - dev
    paths:
      - .github/workflows/deoply.yml
      - package.json
      - public/**
      - src/**
      
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    steps:
      - uses: actions/checkout@v4
      - run: |
          if [[ -n "${{ vars.SITE_NAME }}" ]]; then
            sed -i "s#SiteName: .*#SiteName: '${{ vars.SITE_NAME }}',#" public/config.js
          fi
          if [[ -n "${{ vars.API_KEYS }}" ]]; then
            formatted=$(echo "${{ vars.API_KEYS }}" | sed 's/,/\n/g' | sed "s/^/'/g" | sed "s/$/',/g" | tr '\n' ' ')
            sed -i "/ApiKeys: \[/a \\$formatted" public/config.js
          fi
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          packageManager: yarn
          preCommands: |
            yarn install
            yarn build
          command: |
            pages deploy ./build --project-name=${{ vars.PROJECT_NAME || 'status' }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4